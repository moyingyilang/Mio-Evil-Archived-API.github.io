name: Update Image List
on:
  push:
    branches: [main]
    paths:
      - 'images/**'
  workflow_dispatch:

jobs:
  update-image-list:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 关键：允许工作流写入仓库
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录
    
    - name: Setup Python (for path handling)
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Generate image list
      run: |
        # 确保脚本目录存在
        mkdir -p scripts
        
        # 查找所有JPG/JPEG图片（不区分大小写）
        IMAGE_FILES=$(find images -type f \( -iname "*.jpg" -o -iname "*.jpeg" \))
        
        # 生成图片列表JS文件
        echo "const images = [" > scripts/image-list.js
        
        # 处理每个文件路径
        for file in $IMAGE_FILES; do
          # 规范化路径为Web格式
          web_path="/${file}"
          # 添加到列表
          echo "  \"$web_path\"," >> scripts/image-list.js
        done
        
        # 完成数组（移除尾部逗号）
        sed -i '$ s/,$//' scripts/image-list.js
        echo "];" >> scripts/image-list.js
        
        # 输出调试信息
        echo "===== 生成的图片列表 ====="
        cat scripts/image-list.js
        echo "========================="
        echo "找到图片数量: $(echo "$IMAGE_FILES" | wc -l)"
        
    - name: Commit and push changes
      run: |
        # 配置Git用户
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        
        # 添加更改
        git add scripts/image-list.js
        
        # 检查是否有更改
        if git diff-index --quiet HEAD --; then
          echo "没有更改需要提交"
        else
          # 提交更改
          git commit -m "自动更新图片列表 [skip ci]"
          
          # 推送到仓库
          git push origin main
          echo "已提交并推送更改"
        fi
